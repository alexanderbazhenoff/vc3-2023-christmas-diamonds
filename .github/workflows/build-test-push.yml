---

name: build-test-push
on:    # yamllint disable-line rule:truthy
  - push
permissions:
  contents: write

jobs:

  build:
    name: Build binary
    runs-on: ubuntu-latest
    outputs:
      BINARY_NAME: ${{ steps.variables.outputs.BINARY_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get the maximum available version
        id: changelog
        uses: ocavue/changelog-parser-action@v1
      - name: Set up source name based on a release version
        run: |
          (
            if [[ "${{ steps.changelog.outputs.latestVersion }}" == "1.0.0" ]]; then
              echo "SOURCE_NAME=main.asm"
            else
              echo "SOURCE_NAME=final.asm"
            fi
          ) >> $GITHUB_ENV
      - name: Set up binary name based on a release version
        id: variables
        run: |
          (
            if [[ "${{ steps.changelog.outputs.latestVersion }}" == "1.0.0" ]]; then
              echo "BINARY_NAME=vc3_alx"
            else
              echo "BINARY_NAME=vc3_alx_final"
            fi
          ) >> $GITHUB_OUTPUT
      - name: Install nasm
        run: sudo apt-get install -y nasm
      - name: Build binary
        run: |
          echo "Source name is $SOURCE_NAME"
          nasm -f bin -o vc3_new "$SOURCE_NAME"
      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: vc3_new_binary
          path: vc3_new
          if-no-files-found: error
          retention-days: 1
          compression-level: 0

  md5_test:
    name: Run MD5 check of output
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download binary as artifact
        uses: actions/download-artifact@v4
        with:
          name: vc3_new_binary
      - name: Install coreutils for md5sum run
        run: sudo apt-get install -y coreutils
      - name: Run binary and check md5 of output
        run: |
          chmod +x vc3_new
          ./vc3_new | md5sum --check .github/workflows/output.md5

  push:
    name: Push new binary to repository
    runs-on: ubuntu-latest
    needs:
      - build
      - md5_test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download binary as artifact
        uses: actions/download-artifact@v4
        with:
          name: vc3_new_binary
      - name: Replace an old binary
        run: |
          ls -lh
          chmod +x vc3_new
          rm "$BINARY_NAME" || true
          mv vc3_new "$BINARY_NAME"
        env:
          BINARY_NAME: ${{ needs.build.outputs.BINARY_NAME }}
      - name: Push binary
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: new binary add
          file_pattern: ${{ needs.build.outputs.BINARY_NAME }}

